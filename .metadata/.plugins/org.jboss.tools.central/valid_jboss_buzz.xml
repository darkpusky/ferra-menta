<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Choosing Between ActiveMQ and Kafka for Messaging Infrastructure</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0PBeDxtQ8uw/choosing-between-activemq-and-kafka-for.html" /><category term="activemq" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="Kafka" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-choosing_between_activemq_and_kafka_for_messaging_infrastructure</id><updated>2020-07-31T14:56:39Z</updated><published>2020-07-31T14:56:00Z</published><content type="html">&lt;div&gt;The term asynchronous means “not occurring at the same time” and in the context of distributed systems and messaging it implies that the processing of a request occurs at an arbitrary point in time. There are many advantages of asynchronous interactions over synchronous ones but also new challenges introduced by it. In this post, we will focus on a few specific considerations for choosing a suitable asynchronous messaging infrastructure for implementing &lt;a href="https://developers.redhat.com/topics/event-driven/" target="_blank"&gt;event-driven&lt;/a&gt; systems. Let’s see a few of the subtle differences between asynchronous interaction styles.&lt;br /&gt;&lt;/div&gt;&lt;h2 style="text-align: left;"&gt;Message Business Value&lt;/h2&gt;Not all messages are created equal. Some are valid and valuable only for a short period of time and obsolete later. Some are valuable until they are consumed regardless of the time passed. And some messages are valid and useful for repeated consumption. Considering the validity and the value of messages relative to time and consumption rate, we can qualify interaction styles between services into the following categories:&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-p9AE1uCT-lY/XyQrM2kw2LI/AAAAAAAAOi8/9VSsF63jc_0u3NSab9nn5nYwCtS4fce_QCLcBGAsYHQ/s2576/business_value.png"&gt;&lt;img alt="Message types by business value" border="0" height="136" src="https://1.bp.blogspot.com/-p9AE1uCT-lY/XyQrM2kw2LI/AAAAAAAAOi8/9VSsF63jc_0u3NSab9nn5nYwCtS4fce_QCLcBGAsYHQ/d/business_value.png" title="Message types by business value" width="400" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;i&gt;Message types by business value&lt;/i&gt;&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Volatile&lt;/h4&gt;These are ephemeral messages where the value is time-bound. Valuable now, but not in the short future. There is no point in storing events that are useless in the future and using messaging systems with such characteristics gives the best performance with the lowest latency possible as the disk is skipped. In such a scenario, the system is aware of the connected consumers and the event disseminated to all consumers online at the time of publication. If a consumer is disconnected, the messaging system forgets about these consumers. What is important in such a system is the ability to handle a large number of dynamic clients with low latency interaction needs such as IoT devices.&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Durable&lt;/h4&gt;However, in some situations you want the messaging system to be aware of the consumers and store the messages while the consumer is not available. That is a traditional message broker which will hold on to the messages for the consumers that he knows about and allow the consumers to re-connect and consume the events that were produced in his absence. Once an event is consumed by all the interested parties, it will discard the messages. Here the broker knows about registered consumers and messages are stored durably until read by all registered consumers. Here the goal is to do reliable messaging among services with strong ordering and delivery guarantees.&lt;br /&gt;&lt;h4 style="text-align: left;"&gt;Replayable&lt;/h4&gt;Here, the messaging system is not aware of the consumers that are interested in the event. It simply stores the events published to a stream for some time or until capacity is reached. Then a consumer can come along at any time, connect and consume the events and perhaps replay the stream from the beginning. Consumers can move back and forth in the stream as required and replay the messages repeatedly. Here, the driving force is extreme scalability combined with the ability to replay messages for existing or new consumers.&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Message Semantics&lt;/h2&gt;Apart from the technical characteristics of the messages, it is important to distinguish the language we use, the semantic aspects, and the intent of the interactions. Some messages are targeted for a specific consumer and demand concrete actions. Some are querying the latest state of a system without requiring a state change. And some notify the world about a change that has happened in the source system. From a messaging semantic perspective, there are the following types of messages:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-RMxJzN21Bbk/XyQrihOt9FI/AAAAAAAAOjE/3jg_mU4oqN0WB1G8OOqQ43FC2JNmt5yMACLcBGAsYHQ/s2568/Screenshot%2B2020-07-28%2Bat%2B07.39.01.png"&gt;&lt;img alt="Message types by semantics" border="0" height="135" src="https://1.bp.blogspot.com/-RMxJzN21Bbk/XyQrihOt9FI/AAAAAAAAOjE/3jg_mU4oqN0WB1G8OOqQ43FC2JNmt5yMACLcBGAsYHQ/d/Screenshot%2B2020-07-28%2Bat%2B07.39.01.png" title="Message types by semantics" width="400" /&gt;&lt;/a&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Message types by semantics&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;h4&gt;Command&lt;/h4&gt;A command is a request for action that usually leads to a state change on a known target system. Typically there is a response indicating that action was completed and even there might be a result associated with it. When a response is expected, commands are typically implemented over synchronous protocols such as HTTP, but it is possible to implement request/response or fire and forget style commands over asynchronous messaging systems. With a command based asynchronous messages, there is some coupling between the source and the target systems in the form of command semantics.&lt;br /&gt;&lt;h4&gt;Query&lt;/h4&gt;A query is like a command, but it is a read-only interaction that does not lead to a state change. By its very nature, a query expects a response, and it is common to see synchronous implementations here. But asynchronous and non-blocking implementations over messaging systems and even fire and forget style interactions for long-running operations where a response is written to a different location are common too.&lt;br /&gt;&lt;h4&gt;Event&lt;/h4&gt;An event is a notification that something has changed. A system sends event notifications to notify other systems for a change in its domain. An event is different from a command in that often the event emitting system doesn’t expect an answer at all. In addition to being asynchronous, event messages are not targeted to a specific recipient and thus, they enable even further decoupling. Similar to other asynchronous interactions, events are implemented as messages on queues, which are often called streams. Martin Fowler covers in-depth the different types of events in &lt;a href="https://www.youtube.com/watch?v=STKCRSUsyP0" target="_blank"&gt;this&lt;/a&gt; talk.&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Summary&lt;/h2&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;One approach you can take is to follow the &lt;a href="https://en.wikipedia.org/wiki/Law_of_the_instrument" target="_blank"&gt;Law of the Instrument&lt;/a&gt; approach defined by Maslow as “If the only tool you have is a hammer, treat everything as if it were a nail." You could certainly use a classic message broker such as Apache ActiveMQ to implement the different interaction styles. It would be a familiar technology to many and easier to start with, but hard to implement some use cases such as replayable messaging. Or you could take the other extreme and try to use Apache Kafka for everything. It would require a larger amount of hardware resources and human effort to manage it, but it would cover the replayable messaging and extreme scalability needs. While both of the above approaches are fine to start with, when you have a large number of services with different messaging needs, using the right tool for the right job is a better option. We can map the above-described messaging patterns to see what messaging infrastructure is best suited for each.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-MTuOiuBjh48/XyQr8TVfwuI/AAAAAAAAOjQ/JwY1yhgOkGY8l-upOVl2vqR9kvYdXh9tQCLcBGAsYHQ/s2768/Screenshot%2B2020-07-28%2Bat%2B07.39.17.png"&gt;&lt;img alt="Mapping messaging subtleties to different messaging infrastructures" border="0" height="135" src="https://1.bp.blogspot.com/-MTuOiuBjh48/XyQr8TVfwuI/AAAAAAAAOjQ/JwY1yhgOkGY8l-upOVl2vqR9kvYdXh9tQCLcBGAsYHQ/d/Screenshot%2B2020-07-28%2Bat%2B07.39.17.png" title="Mapping messaging subtleties to different messaging infrastructures" width="400" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;i&gt;Mapping messaging subtleties to different messaging infrastructures&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;We at Red Hat love any open source technology. That is why we included Apache Qpid, Apache ActiveMQ Artemis, and Apache Kafka in our &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/amq" target="_blank"&gt;Red Hat AMQ&lt;/a&gt; product and let the customer choose the right tool for the right job. There are many other aspects to consider when choosing the right tool, I hope this post will help you get there one step closer.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;i&gt;This post was originally published on Red Hat Developers. To read the original post, check &lt;a href="https://developers.redhat.com/blog/2020/07/31/choosing-the-right-asynchronous-messaging-infrastructure-for-the-job/" target="_blank"&gt;here&lt;/a&gt;.&lt;/i&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0PBeDxtQ8uw" height="1" width="1" alt=""/&gt;</content><summary>The term asynchronous means “not occurring at the same time” and in the context of distributed systems and messaging it implies that the processing of a request occurs at an arbitrary point in time. There are many advantages of asynchronous interactions over synchronous ones but also new challenges introduced by it. In this post, we will focus on a few specific considerations for choosing a suitab...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2020-07-31T14:56:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2020/07/choosing-between-activemq-and-kafka-for.html</feedburner:origLink></entry><entry><title>Choosing the right asynchronous-messaging infrastructure for the job</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HrNVtP7wbRg/" /><category term="Event-Driven" /><category term="Java" /><category term="Microservices" /><category term="Stream Processing" /><category term="asynchronous messaging" /><category term="fire and forget" /><category term="kafka microservices" /><category term="red hat amq" /><category term="request and response" /><author><name>Bilgin Ibryam</name></author><id>https://developers.redhat.com/blog/?p=732387</id><updated>2020-07-31T07:00:07Z</updated><published>2020-07-31T07:00:07Z</published><content type="html">&lt;p&gt;The term &lt;i&gt;asynchronous&lt;/i&gt; means &amp;#8220;not occurring at the same time.&amp;#8221; In the context of distributed systems and messaging, this term implies that request processing will occur at an arbitrary point in time. Asynchronous interactions hold many advantages over synchronous ones, but they also introduce new challenges. In this article, we will focus on specific considerations for choosing the asynchronous-messaging infrastructure for your &lt;a href="https://developers.redhat.com/topics/event-driven/"&gt;event-driven&lt;/a&gt; systems.&lt;/p&gt; &lt;p&gt;We will start by looking at the subtle differences between asynchronous interaction styles based on the business value and semantic type of the messages being delivered. Considering these differences helps us to identify messaging patterns, which we can use to determine the kind of messaging system that we need.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: At Red Hat, we love any open source technology, so I use three open source messaging frameworks—&lt;a target="_blank" rel="nofollow" href="https://qpid.apache.org"&gt;Apache Qpid&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://activemq.apache.org/components/artemis/"&gt;Apache ActiveMQ Artemis&lt;/a&gt;, and &lt;a target="_blank" rel="nofollow" href="https://kafka.apache.org"&gt;Apache Kafka&lt;/a&gt;—for my examples. &lt;a href="https://developers.redhat.com/products/amq/overview"&gt;Red Hat AMQ&lt;/a&gt; is our flexible messaging platform that includes all three frameworks, making it easy to choose the right tool for your needs.&lt;/p&gt; &lt;h2&gt;The business value of different message types&lt;/h2&gt; &lt;p&gt;Not all messages are created equal. Some are valid and valuable only for a short period and become obsolete later. Some are valuable until they are consumed, regardless of how much time has passed. And some messages are valid and useful for repeated consumption. By considering the validity and value of messages relative to time and consumption rate, we can qualify interaction styles between services into three categories, as described in Figure 1.&lt;/p&gt; &lt;div id="attachment_758707" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-758707" class=" size-large wp-image-758707 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/07/business_value-1024x349.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/business_value-1024x349.png" alt="Figure 1: Understanding the business value of different message types." width="640" height="218" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/business_value-1024x349.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/business_value-300x102.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/business_value-768x262.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-758707" class="wp-caption-text"&gt;Figure 1: Understanding the business value of different message types.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Let&amp;#8217;s consider each of these categories.&lt;/p&gt; &lt;h3&gt;Volatile&lt;/h3&gt; &lt;p&gt;Messages in a volatile messaging system are ephemeral, and the value of the message is time-bound: They are valuable now, but soon they will not be. There is no point in storing events that will soon be useless. For this type of event, a volatile messaging system yields the best performance with the lowest possible latency as writing to the disk is skipped. In this type of scenario, the messaging system is aware of consumers and disseminates events to all consumers who are online at the time of publication. When consumers disconnect from the system, the messaging system forgets about them. This type of system is vital for its ability to handle a large number of dynamic clients that have low-latency interaction needs, such as Internet-of-Things (IoT) devices.&lt;/p&gt; &lt;h3&gt;Durable&lt;/h3&gt; &lt;p&gt;This more traditional type of message system knows about registered consumers and stores messages durably until every registered consumer has read them. This type of system works well for scenarios where the consumer might be disconnected when the event is published. The system holds on to the messages until every consumer has re-connected and consumed the relevant events. Once an event has been fully consumed, the message broker discards the messages. The goal is to offer reliable messaging among services with strong ordering and delivery guarantees.&lt;/p&gt; &lt;h3&gt;Replayable&lt;/h3&gt; &lt;p&gt;Here, the messaging system is not aware of consumers or event registrations. It merely stores events and publishes them to a stream for a given period, or until capacity is reached. In this type of system, an existing or new consumer can join at any time, connect and consume events, and even replay the stream from the beginning. Consumers can move back and forth in the stream as required. The driving force for this type of messaging system is scalability, combined with the ability to replay messages.&lt;/p&gt; &lt;h2&gt;Message semantics&lt;/h2&gt; &lt;p&gt;Apart from the technical characteristics of messages, it is essential to distinguish the language that we use—i.e., the semantic aspects—and the intent of the interactions. Some messages are targeted for a specific consumer and demand concrete actions. Some query the latest state of a system without requiring a state change, and some notify the world about a change that has happened in the source system. From a messaging-semantics perspective, there are three message types, as described in Figure 2.&lt;/p&gt; &lt;div id="attachment_732407" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics.png"&gt;&lt;img aria-describedby="caption-attachment-732407" class=" size-large wp-image-732407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics-1024x339.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics-1024x339.png" alt="A graphic showing three message types based on semantics: Command, query, and event." width="640" height="212" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics-1024x339.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics-300x99.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/message_semantics-768x254.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-732407" class="wp-caption-text"&gt;Figure 2: Understanding message types based on semantics.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Let&amp;#8217;s consider each of these message types.&lt;/p&gt; &lt;h3&gt;Command&lt;/h3&gt; &lt;p&gt;A &lt;i&gt;command&lt;/i&gt; is a request for action that usually leads to a state change on a known target system. Typically, a response indicates that the action was completed, and there might even be a result associated with the response. When a response is expected, commands are typically implemented over synchronous protocols such as HTTP. It is also possible to apply request-and-response or fire-and-forget command styles over asynchronous messaging systems. Command-based asynchronous messages require coupling between the source system and the target system, in the form of command semantics.&lt;/p&gt; &lt;h3&gt;Query&lt;/h3&gt; &lt;p&gt;A &lt;i&gt;query&lt;/i&gt; is like a command, but it is a read-only interaction that does not lead to a state change. By nature, a query expects a response. It is common to see synchronous implementations of this message type, but asynchronous and non-blocking implementations over messaging systems are also typical. Even fire-and-forget interactions for long-running operations, where a response is written to a different location, are not unusual.&lt;/p&gt; &lt;h3&gt;Event&lt;/h3&gt; &lt;p&gt;An &lt;i&gt;event&lt;/i&gt; is a notification that something has changed. A system sends event notifications to notify other systems of a change in its domain. An event is different from a command in that often the event-emitting system doesn&amp;#8217;t expect a response. In addition to being asynchronous, event messages are not targeted to a specific recipient, which makes further decoupling possible. Similar to other asynchronous interactions, events are implemented as messages on queues, which are often called &lt;i&gt;streams&lt;/i&gt;.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: See Martin Fowler&amp;#8217;s presentation, &amp;#8220;&lt;a target="_blank" rel="nofollow" href="https://www.youtube.com/watch?v=STKCRSUsyP0"&gt;The many meanings of event-driven architecture&lt;/a&gt;,&amp;#8221; for in-depth coverage of the different types of events in a messaging system.&lt;/p&gt; &lt;h2&gt;Choosing a messaging system&lt;/h2&gt; &lt;p&gt;The &lt;a target="_blank" rel="nofollow" href="https://en.wikipedia.org/wiki/Law_of_the_instrument"&gt;&lt;i&gt;Law of the instrument&lt;/i&gt;&lt;/a&gt; approach defined by Abraham Maslow says, &amp;#8220;If the only tool you have is a hammer, treat everything as if it were a nail.&amp;#8221; Following that approach, you could certainly use a classic message broker such as &lt;a target="_blank" rel="nofollow" href="https://activemq.apache.org/components/artemis/"&gt;Apache ActiveMQ Artemis&lt;/a&gt; to implement the different interaction styles described in this article. The technology is familiar to many, which would make it easy to use from the start. On the other hand, it would be challenging to develop use cases such as replayable messaging with a classic message broker.&lt;/p&gt; &lt;p&gt;On the other end of the extreme, you could try using something like &lt;a target="_blank" rel="nofollow" href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt; for every messaging scenario. Kafka would require a more substantial amount of hardware resources and human effort to manage, but use cases requiring replayable messaging or extreme scalability would be covered.&lt;/p&gt; &lt;p&gt;While both of the above approaches are fine in some cases, when you have a large number of services with different messaging needs, using the right tool for the right job is a better option. Mapping the previously described messaging patterns is a useful tool for deciding what messaging infrastructure you need. In Figure 3, I have mapped the characteristics of three different types of message broker system to the different messaging scenarios and types of messages we&amp;#8217;ve discussed.&lt;/p&gt; &lt;div id="attachment_734297" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1.png"&gt;&lt;img aria-describedby="caption-attachment-734297" class=" size-large wp-image-734297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1-1024x335.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1-1024x335.png" alt="A chart for comparing messaging systems based business needs and message semantics." width="640" height="209" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1-1024x335.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1-300x98.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/messaging_infrastructures-1-768x251.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734297" class="wp-caption-text"&gt;Figure 3: Mapping messaging characteristics to messaging infrastructures.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Each of the three frameworks in Figure 3 is effective for a different type of messaging scenario and need. As I mentioned at the beginning of this article, &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/jboss-middleware/amq"&gt;Red Hat AMQ&lt;/a&gt; packages all three of them—Apache Qpid, Apache ActiveMQ Artemis, and Apache Kafka—so that you can choose the right tool for the right job.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;There are many aspects to consider when choosing the right event-messaging infrastructure for your needs. I hope that the considerations and the mapping tool presented in this article will help you get one step closer to deciding.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#38;linkname=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F31%2Fchoosing-the-right-asynchronous-messaging-infrastructure-for-the-job%2F&amp;#038;title=Choosing%20the%20right%20asynchronous-messaging%20infrastructure%20for%20the%20job" data-a2a-url="https://developers.redhat.com/blog/2020/07/31/choosing-the-right-asynchronous-messaging-infrastructure-for-the-job/" data-a2a-title="Choosing the right asynchronous-messaging infrastructure for the job"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/31/choosing-the-right-asynchronous-messaging-infrastructure-for-the-job/"&gt;Choosing the right asynchronous-messaging infrastructure for the job&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HrNVtP7wbRg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The term asynchronous means &amp;#8220;not occurring at the same time.&amp;#8221; In the context of distributed systems and messaging, this term implies that request processing will occur at an arbitrary point in time. Asynchronous interactions hold many advantages over synchronous ones, but they also introduce new challenges. In this article, we will focus on specific considerations [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/31/choosing-the-right-asynchronous-messaging-infrastructure-for-the-job/"&gt;Choosing the right asynchronous-messaging infrastructure for the job&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">732387</post-id><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2020-07-31T07:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/31/choosing-the-right-asynchronous-messaging-infrastructure-for-the-job/</feedburner:origLink></entry><entry><title>How to fix .NET Core’s ‘Unable to obtain lock file access’ error on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DzipgvGkzFE/" /><category term=".NET" /><category term="C#" /><category term="Containers" /><category term="Kubernetes" /><category term=".NET Core" /><category term=".NET Core error" /><category term="C# error" /><category term="dotnet run" /><category term="openshift" /><author><name>Don Schenck</name></author><id>https://developers.redhat.com/blog/?p=731737</id><updated>2020-07-30T07:00:39Z</updated><published>2020-07-30T07:00:39Z</published><content type="html">&lt;p&gt;Well, it finally happened. Despite the added assurances of working with &lt;a href="https://developers.redhat.com/topics/containers"&gt;containers&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt;, the old &amp;#8220;It works on my machine&amp;#8221; scenario reared its ugly head in my &lt;a href="https://developers.redhat.com/products/dotnet/overview"&gt;.NET Core&lt;/a&gt; (C#) code. The image that I created worked fine on my local PC—a Fedora 32 machine—but it crashed when I tried running it in my &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift&lt;/a&gt; cluster.&lt;/p&gt; &lt;p&gt;The error was &amp;#8220;Unable to obtain lock file access on /tmp/NuGetScratch.&amp;#8221; Let&amp;#8217;s take a quick look at what happened, and then I&amp;#8217;ll explain how I fixed it.&lt;/p&gt; &lt;h2&gt;Identity issues&lt;/h2&gt; &lt;p&gt;After a lot of web searching and a discussion with a Red Hat .NET Core engineer, I discovered the underlying problem. It turns out that within a container, the identity used to initially run the program (using the &lt;code&gt;dotnet run&lt;/code&gt; command) must be the same for subsequent users.&lt;/p&gt; &lt;p&gt;The problem might be easy to understand, but what&amp;#8217;s the solution?&lt;/p&gt; &lt;p&gt;&lt;span id="more-731737"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;A temporary problem&lt;/h2&gt; &lt;p&gt;The solution was not only simple, but it was the right way to do things. Consider the initial Dockerfile that I used to build the image:&lt;/p&gt; &lt;pre&gt;FROM registry.access.redhat.com/ubi8/dotnet-31:3.1 USER 1001 RUN mkdir qotd-csharp WORKDIR qotd-csharp ADD . . RUN dotnet publish -c Release EXPOSE 10000 CMD ["dotnet", "run", "/bin/Release/netcoreapp3.1/publish/qotd-csharp.dll"] &lt;/pre&gt; &lt;p&gt;Notice the last line, which is the command that is called when you run the image:&lt;/p&gt; &lt;pre&gt;CMD ["dotnet", "run", "./bin/Release/netcoreapp3.0/publish/qotd-csharp.dll"] &lt;/pre&gt; &lt;p&gt;Because I was using &lt;code&gt;dotnet run&lt;/code&gt;, the .NET Core framework was attempting to access the temporary directory &lt;code&gt;/tmp/NuGetScratch&lt;/code&gt;. Because the user that built the image and the user attempting to run it were not the same, it failed inside of the Kubernetes cluster. The .NET runtime did not have permission to access this directory.&lt;/p&gt; &lt;h2&gt;Update the Dockerfile (hint: don&amp;#8217;t run)&lt;/h2&gt; &lt;p&gt;The solution was simple: I just used the following Dockerfile. Once again, notice the final line:&lt;/p&gt; &lt;pre&gt;FROM registry.access.redhat.com/ubi8/dotnet-31:3.1 USER 1001 RUN mkdir qotd-csharp WORKDIR qotd-csharp ADD . . RUN dotnet publish -c Release EXPOSE 10000 CMD ["dotnet", "./bin/Release/netcoreapp3.0/publish/qotd-csharp.dll"] &lt;/pre&gt; &lt;p&gt;The updated file not only worked, but it worked better.&lt;/p&gt; &lt;p&gt;Because the library (&lt;code&gt;qotd-csharp.dll&lt;/code&gt;) is already built, there&amp;#8217;s no need to use the &lt;code&gt;dotnet run&lt;/code&gt; command when a simple &lt;code&gt;dotnet &amp;#60;path-to-dll&amp;#62;&lt;/code&gt; is correct. As an added benefit, &lt;em&gt;it starts hundreds of times faster&lt;/em&gt;.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Even working with containerized applications on Kubernetes, the &amp;#8220;it works on my machine&amp;#8221; problem can still arise from time to time, especially in scenarios involving permissions. In this instance, not only did a workaround exist, but it was the right way to run the image. Chalk this up to a PEBKAC error—that is, a problem that exists between the keyboard and the chair. I learned my lesson.&lt;/p&gt; &lt;p&gt;You can read more in the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/solutions/5142731"&gt;Red Hat Knowledgebase article&lt;/a&gt; for this error.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#38;linkname=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F30%2Fhow-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift%2F&amp;#038;title=How%20to%20fix%20.NET%20Core%E2%80%99s%20%E2%80%98Unable%20to%20obtain%20lock%20file%20access%E2%80%99%20error%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/07/30/how-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift/" data-a2a-title="How to fix .NET Core’s ‘Unable to obtain lock file access’ error on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/30/how-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift/"&gt;How to fix .NET Core&amp;#8217;s &amp;#8216;Unable to obtain lock file access&amp;#8217; error on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DzipgvGkzFE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Well, it finally happened. Despite the added assurances of working with containers and Kubernetes, the old &amp;#8220;It works on my machine&amp;#8221; scenario reared its ugly head in my .NET Core (C#) code. The image that I created worked fine on my local PC—a Fedora 32 machine—but it crashed when I tried running it in my [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/30/how-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift/"&gt;How to fix .NET Core&amp;#8217;s &amp;#8216;Unable to obtain lock file access&amp;#8217; error on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">731737</post-id><dc:creator>Don Schenck</dc:creator><dc:date>2020-07-30T07:00:39Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/30/how-to-fix-net-cores-unable-to-obtain-lock-file-access-error-on-red-hat-openshift/</feedburner:origLink></entry><entry><title>What is Application Performance Monitoring (APM)?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eda93DbS0Ds/what-is-application-performance.html" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="monitoring" scheme="searchisko:content:tags" /><category term="observability" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-what_is_application_performance_monitoring_apm</id><updated>2020-07-30T06:49:30Z</updated><published>2020-07-30T06:49:00Z</published><content type="html">&lt;div&gt;&lt;i&gt;This is a guest post by &lt;/i&gt;&lt;span data-tooltip-position="top" data-tooltip=""&gt;&lt;i&gt;freelance editor and copywriter Laila Mahran. &lt;/i&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span data-tooltip-position="top" data-tooltip=""&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;When using Application Performance Monitoring, you’re able to monitor key app performance metrics about the performance of a web application in production. APM is often thought of as a ‘second wave’ of performance monitoring techniques, which was preceded by traditional host-based monitoring. Let’s dive in more. &lt;/div&gt;Host-based monitoring focuses on indicators such as:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Storage&lt;/li&gt;&lt;li&gt;Memory&lt;/li&gt;&lt;li&gt;CPU&lt;/li&gt;&lt;li&gt;Network utilization&lt;/li&gt;&lt;/ul&gt;Application monitoring goes a step further and focuses on the actual “end-user” metrics of an application in real-time such as:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Code-level errors&lt;/li&gt;&lt;li&gt;Slowdowns in response times&lt;/li&gt;&lt;li&gt;Error rates&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="text-align: left;"&gt;How does this APM magic work?&lt;/h3&gt;There are multiple different ways Application Performance Monitoring tools can function. Let’s look at the most common ways APM is used. &lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;An agent process that is deployed alongside a web application that hooks into the application runtime to collect telemetry data from the process&lt;/li&gt;&lt;li&gt;Specialized web appliances that inspect Layer 7 traffic to generate telemetry&lt;/li&gt;&lt;/ul&gt;When combined with the monitoring mechanism, an external application generates synthetic traffic which is then sent to the application to monitor performance at predefined throughput intervals. When looking at &lt;a href="https://nordicapis.com/10-api-monitoring-tools/" target="_blank"&gt;APM tools&lt;/a&gt; and other monitoring types, the main difference to highlight is that the telemetry data is generated by inspecting the application runtime, and the performance metrics that it exposes.&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Can APM help me?&lt;/h3&gt;Traditional host monitoring can make you feel stuck with no step closer to an answer. Application Performance Monitoring is designed to answer questions that you can’t get an answer to. While understanding the raw resource utilization of your application is useful, it doesn’t give you a lot of information when you’re trying to track down why a specific request has high latency, why a particular transaction against your database is failing, or how your application performs under load. &lt;br /&gt;Let’s take a look at common questions asked on a daily basis.&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;What are the implications of this issue on user experience for end users?&amp;nbsp; &lt;/li&gt;&lt;li&gt;Where is this high latency coming from?&lt;/li&gt;&lt;li&gt;What caused that outage?&lt;/li&gt;&lt;li&gt;Why are we getting an error here?&lt;/li&gt;&lt;li&gt;Why is this transaction failing?&lt;/li&gt;&lt;li&gt;Can we find the root cause of this substandard user experience?&lt;/li&gt;&lt;/ol&gt;Have you asked yourself these questions before? If you’re nodding your head furiously, you can look to APM to provide the answer. &lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Monitoring vs. Management: What’s the difference?&lt;/h3&gt;Application Performance Management applies to a suite of applications while Application Performance Monitoring applies to a single application. An application performance management tool is able to aggregate and compare multiple types of metrics across multiple applications and services in order to pinpoint performance issues and regressions in your suite of applications. On the other hand, Application Performance Monitoring looks at the code-level to ensure each step is monitored thoroughly. &lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Is Network Monitoring different?&lt;/h3&gt;Network monitoring focuses on routers in order to detect issues with an application or collecting telemetry from network devices such as switches. If you’re looking to get a complete picture, networking monitoring requires stitching together information from each line. This approach doesn’t provide sufficient resolution or information for modern applications, however, especially when the application itself may be running behind a variety of proxies or service routers which themselves are running on virtualized networking equipment.&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;APM vs. Observability: What’s the difference?&lt;/h3&gt;You’ve heard the hype of observability, but how is it different from APM? &lt;a href="https://www.ingeniumweb.com/blog/post/what-is-observability-and-how-is-it-connected-to-marketing-and-sales/5032/" target="_blank"&gt;Observability&lt;/a&gt; is a holistic approach to fully understanding your application performance as well as a shared set of practices and terminology to help communicate performance across your organization. While observability helps you navigate from effect to cause, &lt;a href="https://lightstep.com/blog/apm-is-dying-and-thats-okay/" target="_blank"&gt;APM falls short&lt;/a&gt; of being able to answer “unknown unknowns,” questions that you didn’t think to ask ahead of time. This is the reason behind APM currently being eclipsed by observability. &lt;br /&gt;Observability is unique due to the capability of answering questions about modern, microservice-based application architectures where you will often contend with serverless components, polyglot services, and container-based deployments running on &lt;a href="https://www.influxdata.com/solutions/kubernetes-monitoring-solution/" target="_blank"&gt;Kubernetes&lt;/a&gt;. Circling back, observability provides a shared language to standardize communication around performance. This way you’re able to focus on the measurement of service level objectives and service level indicators that are more broadly applicable and interpretable to your unique application architecture than simple throughput or health checks.&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Is Application Performance Monitoring worth it?&lt;/h3&gt;Instead of depending on the second or third order metrics about host or network utilization to understand your application’s performance, APM collects real-time performance data from the perspective of an end-user. Another bonus: real-time results of database queries and page load times are provided with APM in a way that’s not possible with host-based monitoring. This information can be invaluable in understanding how your application performs under load or while trying to track down bugs in your software. APM solutions provide alerting systems to IT Operations, Site Reliability Engineers, DevOps, and more to quickly troubleshoot performance issues and slowdowns.&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eda93DbS0Ds" height="1" width="1" alt=""/&gt;</content><summary>This is a guest post by freelance editor and copywriter Laila Mahran. When using Application Performance Monitoring, you’re able to monitor key app performance metrics about the performance of a web application in production. APM is often thought of as a ‘second wave’ of performance monitoring techniques, which was preceded by traditional host-based monitoring. Let’s dive in more. Host-based monit...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2020-07-30T06:49:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2020/07/what-is-application-performance.html</feedburner:origLink></entry><entry><title>This Week in JBoss - 30th July 2020: No rest for the JBoss community!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/geuCrDBcCgw/weekly-2020-07-30.html" /><category term="clustering" scheme="searchisko:content:tags" /><category term="EAP" scheme="searchisko:content:tags" /><category term="Eclipse" scheme="searchisko:content:tags" /><category term="editorial" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="jgroups" scheme="searchisko:content:tags" /><category term="Jkube" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="mod_cluster" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Romain Pelisse 2020-07-30</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_30th_july_2020_no_rest_for_the_jboss_community</id><updated>2020-07-30T00:00:00Z</updated><published>2020-07-30T00:00:00Z</published><content type="html">&lt;article class="" data-tags="eap, editorial, infinispan, quarkus, jgroups, java, wildfly, clustering, mod_cluster, eclipse, jkube, kubernetes,"&gt; &lt;h1&gt;This Week in JBoss - 30th July 2020: No rest for the JBoss community!&lt;/h1&gt; &lt;p class="preamble"&gt;&lt;/p&gt;&lt;p&gt;Welcome to another installment of our JBoss Editorial! The last two weeks have been pretty rich on published content and releases, so let’s dive right in!&lt;/p&gt;&lt;p&gt;&lt;/p&gt; &lt;div class="sect1"&gt; &lt;h2 id="_from_spring_boot_to_quarkus"&gt;From Spring Boot to Quarkus&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;As Quarkus community is increasing the question of how to migrate to this new framework (or rather runtime) often arises. If you happen to have such predicament with Spring Boot, I’m sure you’ll be quite interested to read this article on &lt;a href="https://developers.redhat.com/blog/2020/07/17/migrating-spring-boot-tests-to-quarkus/"&gt;migrating Spring Boot tests to Quarkus&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_secure_vue_js_with_keycloak"&gt;Secure vue.js with Keycloak&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;If most of the content we mentioned today is made of articles, we have one, quite cool video content to share. It’s coming straight from one of the tech-talks of the DevNation and we hope you’ll like it : &lt;a href="https://developers.redhat.com/devnation/tech-talks/secure-vuejs-keycloak"&gt;Secure vue.js using Keycloak&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_jgroups_double_your_performance_with_virtual_threads"&gt;JGroups: Double your performance with virtual threads!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;Quite a lot of exciting things are happening in the realm of JGroups lately! Last time, we already mentioned the &lt;a href="http://belaban.blogspot.com/2020/06/new-netty-transport.html"&gt;new netty transport&lt;/a&gt;, but Bela Ban, the creator of project, got us even more excited with this news about &lt;a href="http://belaban.blogspot.com/2020/07/double-your-performance-virtual-threads.html"&gt;how one can double its performance using virtual threads (fibers) on JDK15/16&lt;/a&gt;!!! This JDK is still a bit down the road, but its certainly a nice glimpse into tomorrow.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_back_to_the_basics"&gt;Back to the Basics&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;As said above, the last two weeks have been particularly rich in interesting content around the JBoss community and the Java ecosystem at large. Some of those articles took the time to go back and rethink some aspects of our work that we take for granted. Let’s first mention this original take on java programming that focuses on &lt;a href="https://developers.redhat.com/blog/2020/07/09/behavior-is-easy-state-is-hard-tame-inconsistent-state-in-your-java-code/"&gt;taming inconsistent state in a Java code&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This first article is already pretty centered around coding, but this next one goes into the very guts of Infinispan! If you know the project, I’m sure you’ll find this entry on &lt;a href="https://infinispan.org/blog/2020/07/22/anchored-keys/"&gt;anchored keys&lt;/a&gt; as fascinating as I did!&lt;/p&gt; &lt;p&gt;Let’s also revisit a classic: load balancing a JEE app server (such as Wildfly or its product counterpart JBoss EAP), but with a twist: &lt;a href="https://developers.redhat.com/blog/2020/07/15/load-balancing-red-hat-jboss-enterprise-application-platform-subclusters-with-mod_cluster/"&gt;Load balancing Red Hat JBoss EAP with subclusters&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_evangelists_corner"&gt;Evangelist’s Corner&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;No rest for the wicked! And no, no rest for our very own Eric D. Schabell! In the last two weeks, he has been quite busy again. First of all, he got his very &lt;a href="https://www.schabell.org/2020/07/what-the-dev-podcast-episode-44-agile-integration.html"&gt;first interview on a podcast&lt;/a&gt; (yep, that’s right, he was never on a podcast before!). With the host, he discussed the best practices for Agile integration. If you are interested in this topic, fetch the episode, you won’t regret it!&lt;/p&gt; &lt;p&gt;That’s not all. Eric also took the time to update and release his "fully updated to the latest release" version of his &lt;a href="https://www.schabell.org/2020/07/beginners-guide-building-a-retail-web-shop-workshop-update.html"&gt;Beginners guide - Building a retail web shop workshop update&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;On top of that, he took the time to describe &lt;a href="https://www.schabell.org/2020/07/how-to-install-rhpam-77.html"&gt;how to How to Install Red Hat Process Automation Manager 7.7&lt;/a&gt; and share his experience with the &lt;a href="https://www.schabell.org/2020/07/shift-remote-2020-devops-heroes.html"&gt;Shift Remote 2020 online conference&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_releases_releases_releases"&gt;Releases, releases, releases,…​&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;As always, the JBoss community has been pretty busy in the last weeks and a few projects have seized the relative quietness of Summer to release new version of their product:&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://www.keycloak.org//2020/07/keycloak-1100-released.html"&gt;Keycloak 11.0.0&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://bytemanblog.blogspot.com/2020/07/byteman-4012-has-been-released.html"&gt;Byteman 4.0.12&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://infinispan.org/blog/2020/07/27/infinispan-12/"&gt;Infinispan 12.0.0.Dev01&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_decaf"&gt;Decaf&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;p&gt;For once, this section stays rather close to Java, covering how to &lt;a href="https://developers.redhat.com/blog/2020/07/27/deploy-your-java-web-application-into-the-cloud-using-eclipse-jkube/"&gt;deploy your Java Webapp into the cloud using Eclipse JKube&lt;/a&gt;. So, yes, we’ll talk Kubernetes, but in a context quite close to home :) .&lt;/p&gt; &lt;p&gt;That’s all for another edition of the JBoss Editorial, please join us again for more exciting development from the JBoss Communities.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="author"&gt; &lt;pfe-avatar pfe-shape="circle" pfe-pattern="squares" pfe-src="/img/people/romain-pelisse 2020-07-30.png"&gt;&lt;/pfe-avatar&gt; &lt;span&gt;Romain Pelisse 2020-07-30&lt;/span&gt; &lt;/div&gt;&lt;/article&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/geuCrDBcCgw" height="1" width="1" alt=""/&gt;</content><summary>This Week in JBoss - 30th July 2020: No rest for the JBoss community! Welcome to another installment of our JBoss Editorial! The last two weeks have been pretty rich on published content and releases, so let’s dive right in! From Spring Boot to Quarkus As Quarkus community is increasing the question of how to migrate to this new framework (or rather runtime) often arises. If you happen to have suc...</summary><dc:creator>Romain Pelisse 2020-07-30</dc:creator><dc:date>2020-07-30T00:00:00Z</dc:date><feedburner:origLink>https://www.jboss.org/posts/weekly-2020-07-30.html</feedburner:origLink></entry><entry><title>From notebooks to pipelines: Using Open Data Hub and Kubeflow on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/JVsWm6aK5Rg/" /><category term="Big Data" /><category term="CI/CD" /><category term="DevOps" /><category term="Machine Learning" /><category term="AI/ML" /><category term="data model" /><category term="Kubeflow" /><category term="Open Data Hub" /><category term="openshift" /><author><name>Juana Nakfour</name></author><id>https://developers.redhat.com/blog/?p=733947</id><updated>2020-07-29T07:00:36Z</updated><published>2020-07-29T07:00:36Z</published><content type="html">&lt;p&gt;Data scientists often use notebooks to explore data and create and experiment with models. At the end of this exploratory phase is the product-delivery phase, which is basically getting the final model to production. Serving a model in production is not a one-step final process, however. It is a continuous phase of training, development, and data monitoring that is best captured or automated using pipelines. This brings us to a dilemma: How do you move code from notebooks to containers orchestrated in a pipeline, and schedule the pipeline to run after specific triggers like time of day, new batch data, and monitoring metrics?&lt;/p&gt; &lt;p&gt;Today there are multiple current tools and proposed methods for moving code from notebooks to pipelines. For example, the tool &lt;a target="_blank" rel="nofollow" href="https://github.com/nachlass-tools/nachlass"&gt;nachlass&lt;/a&gt; uses the source-to-image (S2I) method to convert notebooks ultimately into containers. In this article and &lt;a href="https://developers.redhat.com/devnation/tech-talks/kubeflow-kubernetes/?sc_cid=7013a000002gW1BAAU"&gt;in my original DevNation presentation&lt;/a&gt;, we explore a new Kubeflow-proposed tool for converting notebooks to Kubeflow pipelines: Kale. Kale is a &lt;a href="https://developers.redhat.com/blog/2020/02/10/installing-kubeflow-v0-7-on-openshift-4-2/"&gt;Kubeflow&lt;/a&gt; extension that is integrated with &lt;a target="_blank" rel="nofollow" href="https://jupyterlab.readthedocs.io/en/stable/"&gt;JupyterLab&lt;/a&gt;&amp;#8216;s user interface (UI). It offers data scientists a UI-driven way to convert notebooks to Kubeflow pipelines and run the pipelines in an experiment.&lt;/p&gt; &lt;p&gt;We run these tools as part of the Open Data Hub installation on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt;. Open Data Hub is composed of multiple open source tools that are packaged in the ODH Operator. When you install ODH you can specify which tools you want to install, such as Airflow, Argo, Seldon, Jupyterhub, and Spark.&lt;/p&gt; &lt;h2&gt;Prerequisites&lt;/h2&gt; &lt;p&gt;To run this demo, you will need access to an OpenShift 4.x cluster with cluster-admin rights to install a cluster-wide Open Data Hub Operator.&lt;/p&gt; &lt;h2&gt;Install Kubeflow on OpenShift&lt;/h2&gt; &lt;p&gt;We can use the Open Data Hub Operator to install Kubeflow on OpenShift. From the OpenShift portal, go to the OperatorHub and search for &lt;b&gt;Open Data Hub&lt;/b&gt;, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_733957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.25.19-PM.png"&gt;&lt;img aria-describedby="caption-attachment-733957" class="wp-image-733957" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.25.19-PM-300x243.png" alt="A screenshot of the OperatorHub with the Open Data Hub Operator selected and installed." width="640" height="518" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.25.19-PM-300x243.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.25.19-PM-768x622.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.25.19-PM.png 916w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-733957" class="wp-caption-text"&gt;Figure 1: Installing Open Data Hub from the OpenShift OperatorHub.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Click &lt;b&gt;Install&lt;/b&gt; and move to the next screen. Currently, Open Data Hub offers two channels for installation: beta and legacy. The beta channel is for the new Open Data Hub releases that include Kubeflow. Keep the default settings on that channel, and click &lt;b&gt;Subscribe&lt;/b&gt;, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_733967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.30.39-PM.png"&gt;&lt;img aria-describedby="caption-attachment-733967" class="wp-image-733967" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.30.39-PM-300x292.png" alt="A screenshot of the subscription page with the option to choose the beta update channel." width="640" height="623" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.30.39-PM-300x292.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.30.39-PM.png 682w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-733967" class="wp-caption-text"&gt;Figure 2: Create a subscription to the Open Data Hub Operator using the beta update channel.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;After you subscribe, the Open Data Hub Operator will be installed in the &lt;code&gt;openshift-operators&lt;/code&gt; namespace, where it is available cluster-wide.&lt;/p&gt; &lt;p&gt;Next, create a new namespace called &lt;code&gt;kubeflow&lt;/code&gt;. From there, go to &lt;b&gt;Installed Operators&lt;/b&gt;, click on the Open Data Hub Operator, and create a new instance of the &lt;code&gt;kfdef&lt;/code&gt; resource. The default is an example &lt;code&gt;kfdef&lt;/code&gt; instance (a YAML file) that installs Open Data Hub components such as Prometheus, Grafana, JupyterHub, Argo, and Seldon. To install Kubeflow, you will need to replace the example &lt;code&gt;kfdef&lt;/code&gt; instance with the one from Kubeflow. Replace the example file with &lt;a target="_blank" rel="nofollow" href="https://raw.githubusercontent.com/opendatahub-io/manifests/v0.7-branch-openshift/kfdef/kfctl_openshift_apiv1.yaml"&gt;this one&lt;/a&gt;, then click &lt;b&gt;Create&lt;/b&gt;. You will see the file shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_733977" style="width: 577px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.37.33-PM.png"&gt;&lt;img aria-describedby="caption-attachment-733977" class="wp-image-733977 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.37.33-PM.png" alt="A screenshot of the new kfdef resource file for Kubeflow." width="567" height="787" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.37.33-PM.png 567w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.37.33-PM-216x300.png 216w" sizes="(max-width: 567px) 100vw, 567px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-733977" class="wp-caption-text"&gt;Figure 3: Create the kfdef resource for Kubeflow.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;That is all it takes to install Kubeflow on OpenShift. Watch the pods install in the namespace and wait until all of the pods are running before starting on the next steps&lt;/p&gt; &lt;h2&gt;Notebooks to pipeline&lt;/h2&gt; &lt;p&gt;After the installation has successfully completed, the next step is to create a notebook server in your development namespace, then create a notebook that includes tasks for creating and validating models. To get to the Kubeflow portal, head over to the &lt;b&gt;istio-system&lt;/b&gt; namespace and click on the &lt;b&gt;istio-ingressgateway&lt;/b&gt; route. This route brings you to the main Kubeflow portal, where you must create a new profile and a working namespace. From the left side of the menu bar in the main menu, head over to &lt;b&gt;Notebook Server&lt;/b&gt; and click on &lt;b&gt;New Server&lt;/b&gt;. A new form will open, where you can create a notebook server to host your notebooks. Be sure that the namespace that you just created is selected in the drop-down menu.&lt;/p&gt; &lt;p&gt;In this form, you must specify a custom image that &lt;a target="_blank" rel="nofollow" href="https://medium.com/kubeflow/an-end-to-end-ml-workflow-from-notebook-to-kubeflow-pipelines-with-minikf-kale-72244d245d53"&gt;includes the Kale component&lt;/a&gt;. Specify the custom image: &lt;b&gt;gcr.io/arrikto-public/tensorflow-1.14.0-notebook-cpu:kubecon-workshop&lt;/b&gt;.&lt;/p&gt; &lt;p&gt;Add a new data volume, as shown in Figure 4, then hit &lt;b&gt;Launch&lt;/b&gt;.&lt;/p&gt; &lt;div id="attachment_733987" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.50.01-PM.png"&gt;&lt;img aria-describedby="caption-attachment-733987" class="wp-image-733987" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.50.01-PM-300x253.png" alt="A screenshot of the setup page for the custom image." width="640" height="539" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.50.01-PM-300x253.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.50.01-PM-768x647.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.50.01-PM.png 912w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-733987" class="wp-caption-text"&gt;Figure 4: Launching a new notebook server.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Once it is ready, you can connect to the notebook server that you just created. The new notebook server gets you to the main JupyterLab portal, which includes Kubeflow&amp;#8217;s Kale extension.&lt;/p&gt; &lt;h2&gt;An example notebook&lt;/h2&gt; &lt;p&gt;We will use a very simple notebook based on &lt;a target="_blank" rel="nofollow" href="https://github.com/josephlee94/intuitive-deep-learning"&gt;this example&lt;/a&gt;. The notebook predicts whether a house value is below or above average house values. For this demonstration, we simplified the notebook and prepared it for a pipeline. You can &lt;a target="_blank" rel="nofollow" href="https://github.com/nakfour/DevnationJune202"&gt;download the converted notebook from GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Tasks in this notebook include downloading the house-prediction data, preparing the data, and creating a neural network with three layers that can predict the value of a given house. At this point, the example notebook looks like a normal notebook, and you can run the cells to ensure that they are working.&lt;/p&gt; &lt;p&gt;To enable Kale in the notebook, click on the Kubeflow icon on the left-side menu bar and click &lt;b&gt;Enable&lt;/b&gt;. You should see something similar to the screenshot in Figure 5.&lt;/p&gt; &lt;div id="attachment_733997" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM.png"&gt;&lt;img aria-describedby="caption-attachment-733997" class="wp-image-733997 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM-1024x889.png" alt="A screenshot of the Kale deployment panel and details." width="640" height="556" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM-1024x889.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM-300x261.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM-768x667.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-3.56.11-PM.png 1087w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-733997" class="wp-caption-text"&gt;Figure 5: Click the Kubeflow icon on the left-side menu bar and enable Kale.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can specify the role for each cell by clicking the &lt;b&gt;Edit&lt;/b&gt; button on the top-right corner of each cell. As shown in Figure 5, we have an &lt;b&gt;imports&lt;/b&gt; section and a &lt;b&gt;prepdata&lt;/b&gt; pipeline step, as well as a &lt;b&gt;trainmodel&lt;/b&gt; pipeline step (not shown) that depends on &lt;b&gt;prepdata&lt;/b&gt; step. Name the experiment and the pipeline, then click &lt;b&gt;Compile and Upload&lt;/b&gt;.&lt;/p&gt; &lt;p&gt;For now, we will just create the pipeline and defer running it until later. When you get an &lt;b&gt;Okay&lt;/b&gt; message, head over to the main Kubeflow portal and select &lt;b&gt;Pipelines&lt;/b&gt;. The first pipeline listed is the Kale-generated pipeline. If you click on it, you should see the pipeline details shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_734007" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.00.43-PM.png"&gt;&lt;img aria-describedby="caption-attachment-734007" class="wp-image-734007" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.00.43-PM-300x250.png" alt="A diagram of the Kale-generated pipeline, showing the steps in the pipeline's flow." width="640" height="533" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.00.43-PM-300x250.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.00.43-PM.png 691w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734007" class="wp-caption-text"&gt;Figure 6: Exploring the Kale-generated pipeline.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Adjusting the pipeline&lt;/h2&gt; &lt;p&gt;You can explore the code and see the different steps in the pipeline. This is a generated pipeline that assumes the underlying Argo is using a docker container. As a result, this pipeline will not run on OpenShift, which uses a CRI-O container engine and the &lt;code&gt;k8sapi&lt;/code&gt; executor for Argo.&lt;/p&gt; &lt;p&gt;Also, note that the container image that is used for each step requires root permissions, so we had to give root privileges to the service account running the workflow (&lt;code&gt;oc adm policy add-role-to-user admin system:serviceaccount:namespace:default-editor&lt;/code&gt;). Obviously, this method of running containers on OpenShift is not advised. In the future, we hope to change the container so that it does not require root privileges.&lt;/p&gt; &lt;p&gt;You can &lt;a target="_blank" rel="nofollow" href="https://github.com/nakfour/DevnationJune202"&gt;download the adjusted pipeline and a volume YAML resource&lt;/a&gt; from GitHub. Create the volume before uploading and running the adjusted pipeline, which is shown in Figure 7.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: This adjustment does not change the containers themselves. Instead, the pipeline structure, permissions, and added volumes were changed.&lt;/p&gt; &lt;div id="attachment_734027" style="width: 598px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.07.36-PM.png"&gt;&lt;img aria-describedby="caption-attachment-734027" class="wp-image-734027 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.07.36-PM.png" alt="A screenshot of the Kale-generated pipeline with the adjustments for OpenShift." width="588" height="456" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.07.36-PM.png 588w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-11-at-4.07.36-PM-300x233.png 300w" sizes="(max-width: 588px) 100vw, 588px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734027" class="wp-caption-text"&gt;Figure 7: The adjusted pipeline.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, you learned how to install Kubeflow on OpenShift using the Open Data Hub Operator, and we explored using Kubeflow&amp;#8217;s Kale extension to convert notebooks to pipelines. Moving code from notebooks to pipelines is a critical step in the artificial intelligence and machine learning (AI/ML) end-to-end workflow, and there are multiple technologies addressing this issue. While these conversion tools might be immature and in development, we see great potential and room for improvement. Please join our &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/community.html"&gt;Open Data Hub community&lt;/a&gt; and contribute to developing AI/ML end-to-end technologies on OpenShift.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#38;linkname=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F29%2Ffrom-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift%2F&amp;#038;title=From%20notebooks%20to%20pipelines%3A%20Using%20Open%20Data%20Hub%20and%20Kubeflow%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2020/07/29/from-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift/" data-a2a-title="From notebooks to pipelines: Using Open Data Hub and Kubeflow on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/29/from-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift/"&gt;From notebooks to pipelines: Using Open Data Hub and Kubeflow on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/JVsWm6aK5Rg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Data scientists often use notebooks to explore data and create and experiment with models. At the end of this exploratory phase is the product-delivery phase, which is basically getting the final model to production. Serving a model in production is not a one-step final process, however. It is a continuous phase of training, development, and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/29/from-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift/"&gt;From notebooks to pipelines: Using Open Data Hub and Kubeflow on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">733947</post-id><dc:creator>Juana Nakfour</dc:creator><dc:date>2020-07-29T07:00:36Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/29/from-notebooks-to-pipelines-using-open-data-hub-and-kubeflow-on-openshift/</feedburner:origLink></entry><entry><title>What the Dev? - Best practices for Agile integration with Red Hat's Eric Schabell - Episode 44</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/_2wXE8cGS_s/what-the-dev-podcast-episode-44-agile-integration.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossAMQ" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-what_the_dev_best_practices_for_agile_integration_with_red_hat_s_eric_schabell_episode_44</id><updated>2020-07-29T08:32:06Z</updated><published>2020-07-29T05:00:00Z</published><content type="html">&lt;div class="separator"&gt;&lt;div class="separator" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em; text-align: center;"&gt;&lt;a href="http://whatthedev.buzzsprout.com/673192/4750094-best-practices-for-agile-integration-with-red-hat-s-eric-schabell-episode-44" target="_blank"&gt;&lt;img border="0" data-original-height="1365" data-original-width="2048" src="https://1.bp.blogspot.com/-TtIkRfU01t0/XyEy_JXjPoI/AAAAAAAAxUY/0XkiB8FE6hQBlpIp2-eWetzeUcCQs6s2ACNcBGAsYHQ/s320/podcast.jpg" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;Funny enough, in all my years of writing, speaking, and recording video content on all matter of topics from baseball to technology... I've never been on a single podcast.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;That all changed last week when I got the chance to join&amp;nbsp;David Rubinstein, editor in chief of SD Times, for a quick chat on his podcast called &lt;i&gt;&lt;a href="http://whatthedev.buzzsprout.com/673192" target="_blank"&gt;What the Dev?&lt;/a&gt;&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This is&amp;nbsp;a podcast by the SD Times editorial team, covering the biggest and newest topics in software and technology.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In this episode 44 we had a running conversation about agile integration, microservices, agile, cloud-native development, container platforms, hybrid cloud, and more.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Find out why so many struggle with their transition to these new concepts and technologies. Listen in to a few of the pitfalls that you can avoid as you scale out your development organization to effectively deliver and maintain microservice integration projects.&lt;/div&gt;&lt;span&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;/span&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="http://whatthedev.buzzsprout.com/673192/4750094-best-practices-for-agile-integration-with-red-hat-s-eric-schabell-episode-44" target="_blank"&gt;Best practices for Agile integration with Red Hat's Eric Schabell - Episode 44&lt;/a&gt;&lt;/h3&gt;&lt;div&gt;&lt;i&gt;This week, we spoke to Eric Schabell, the portfolio architect director at Red Hat, about Agile integration. A lot of enterprises are moving in the direction of Agile teams all with an eye on the digital transformation story where they're headed towards delivering things in a cloud native fashion. You'll hear some of the best ways in which to achieve that Agile integration.&amp;nbsp;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-C0KaSeoREGE/XyEzpeDA6nI/AAAAAAAAxUg/TNLzemz0L58QtTG4-rko9NKtuOfgrnnaACNcBGAsYHQ/s1400/what-the-dev.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="1400" data-original-width="1400" height="200" src="https://1.bp.blogspot.com/-C0KaSeoREGE/XyEzpeDA6nI/AAAAAAAAxUg/TNLzemz0L58QtTG4-rko9NKtuOfgrnnaACNcBGAsYHQ/w200-h200/what-the-dev.jpg" width="200" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;It's just a little over 16 minutes, something you can catch on your next coffee break. Hope you enjoy listening to our conversation and if you have any comments, just reach out to me as I'm always happy to hear from you.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=B4kyhf-k9J4:y-3qQW1NPDY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=B4kyhf-k9J4:y-3qQW1NPDY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=B4kyhf-k9J4:y-3qQW1NPDY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=B4kyhf-k9J4:y-3qQW1NPDY:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=B4kyhf-k9J4:y-3qQW1NPDY:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/B4kyhf-k9J4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/_2wXE8cGS_s" height="1" width="1" alt=""/&gt;</content><summary>Funny enough, in all my years of writing, speaking, and recording video content on all matter of topics from baseball to technology... I've never been on a single podcast. That all changed last week when I got the chance to join David Rubinstein, editor in chief of SD Times, for a quick chat on his podcast called What the Dev?  This is a podcast by the SD Times editorial team, covering the biggest...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-07-29T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/B4kyhf-k9J4/what-the-dev-podcast-episode-44-agile-integration.html</feedburner:origLink></entry><entry><title>Creating event sources in the OpenShift 4.5 web console</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WqreFkHs49k/" /><category term="Event-Driven" /><category term="Kubernetes" /><category term="Microservices" /><category term="Serverless" /><category term="event driven microservices" /><category term="kafka event" /><category term="kafka microservices" /><category term="knative tutorial" /><category term="openshift" /><author><name>Brian Tannous</name></author><id>https://developers.redhat.com/blog/?p=756407</id><updated>2020-07-28T07:00:08Z</updated><published>2020-07-28T07:00:08Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2020/07/16/whats-new-in-the-openshift-4-5-console-developer-experience/"&gt;Red Hat OpenShift 4.5&lt;/a&gt; makes it easier than ever to deploy and run &lt;a href="https://developers.redhat.com/topics/event-driven"&gt;event-driven applications&lt;/a&gt; that react to real-time information via event notifications. Empowered by &lt;a href="https://developers.redhat.com/blog/2020/04/30/serverless-applications-made-faster-and-simpler-with-openshift-serverless-ga/"&gt;OpenShift Serverless&lt;/a&gt;, applications come to life through events, scaling up resources as needed (or up to a pre-configured limit), and then scaling back to zero after the resource burst is over.&lt;/p&gt; &lt;p&gt;In this article, I briefly introduce the OpenShift Serverless features for developing event-driven applications in OpenShift 4.5. I also demonstrate these features with an example featuring &lt;a href="https://developers.redhat.com/topics/serverless-architecture"&gt;Knative services&lt;/a&gt; and a Kafka event source.&lt;/p&gt; &lt;h2&gt;Event-driven application architecture&lt;/h2&gt; &lt;p&gt;Events provide a simple mechanism for applications to subscribe to a variety of event sources, including your own applications, cloud services from multiple providers, Software-as-a-Service (SaaS) systems, and Red Hat services such as &lt;a href="https://developers.redhat.com/products/amq/getting-started"&gt;AMQ Streams&lt;/a&gt;. The new &lt;a href="https://developers.redhat.com/blog/2020/07/16/improved-navigation-in-the-openshift-4-5-developer-perspective/"&gt;Developer perspective&lt;/a&gt; in the OpenShift 4.5 web console makes it even easier to deploy event-driven applications without relying on YAML.&lt;/p&gt; &lt;h2&gt;Serverless eventing in OpenShift 4.5&lt;/h2&gt; &lt;p&gt;OpenShift Serverless provides several mechanisms for building event-driven applications:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Direct connections&lt;/li&gt; &lt;li&gt;Channels and subscriptions&lt;/li&gt; &lt;li&gt;Event filtering with brokers and triggers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The best method to use depends on the needs of the service.&lt;/p&gt; &lt;h3&gt;Direct connections&lt;/h3&gt; &lt;p&gt;The most simple event-driven architecture is a direct connection. Figure 1 shows the architecture for directly connecting a Knative service to an event source. Later in the article, I will show you how to use the new OpenShift Developer perspective to create a direct connection.&lt;/p&gt; &lt;div id="attachment_756657" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct.png"&gt;&lt;img aria-describedby="caption-attachment-756657" class="wp-image-756657 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct-1024x153.png" alt="A diagram of the event-driven application architecture for a direct connection." width="640" height="96" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct-1024x153.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct-300x45.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct-768x114.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/1-event-direct.png 1148w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756657" class="wp-caption-text"&gt;Figure 1: The event-driven application architecture for a direct connection.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Directly connecting sources to services works well, but what if you need to group multiple sources? What if multiple services need to subscribe to those groups?&lt;/p&gt; &lt;h3&gt;Channels and subscriptions&lt;/h3&gt; &lt;p&gt;Multiple sources and sinks can work together via OpenShift Serverless channels and subscriptions. Figure 2 shows the architecture of channels and subscriptions in an event-driven application.&lt;/p&gt; &lt;div id="attachment_756667" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel.png"&gt;&lt;img aria-describedby="caption-attachment-756667" class="wp-image-756667 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel-1024x188.png" alt="A diagram of the event-driven application architecture for channels and subscriptions." width="640" height="118" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel-1024x188.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel-300x55.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel-768x141.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/2-event-channel.png 1229w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756667" class="wp-caption-text"&gt;Figure 2: The event-driven application architecture for channels and subscriptions.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Event channels make groups of event sources easy to reuse. Subscriptions offer a simple way to tie events to &lt;a href="https://developers.redhat.com/coderland/serverless"&gt;Knative services&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Event brokers and triggers&lt;/h3&gt; &lt;p&gt;OpenShift Serverless lets us quickly group and reuse events, but what about filtering event notifications? One option would be to add a function to the application code to only process certain kinds of events. While this approach might work, it risks notifying services about events that they don&amp;#8217;t need and will just throw out. Another method is to use filtering notifications, which will only notify the service when it is necessary.&lt;/p&gt; &lt;p&gt;The OpenShift Serverless event broker and trigger build on event sources to filter events before notifying the service, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_756677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker.png"&gt;&lt;img aria-describedby="caption-attachment-756677" class="wp-image-756677 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker-1024x273.png" alt="A diagram of the event-driven application architecture for brokers and triggers." width="640" height="171" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker-1024x273.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker-300x80.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker-768x205.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/3-event-broker.png 1083w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756677" class="wp-caption-text"&gt;Figure 3: The event-driven application architecture for brokers and triggers.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Creating Knative services&lt;/h2&gt; &lt;p&gt;Since &lt;a href="https://developers.redhat.com/blog/2020/04/30/serverless-applications-made-faster-and-simpler-with-openshift-serverless-ga/"&gt;OpenShift 4.4&lt;/a&gt;, it has been possible to select a &lt;strong&gt;Knative Service&lt;/strong&gt; resource type when adding a new application to a project. Adding a &lt;strong&gt;Knative Service&lt;/strong&gt; resource type instantly allows any application to benefit from the power of OpenShift Serverless, as demonstrated in Figure 4.&lt;/p&gt; &lt;div id="attachment_756737" style="width: 560px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4-ksvc0-1.gif"&gt;&lt;img aria-describedby="caption-attachment-756737" class="wp-image-756737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/4-ksvc0-1.gif" alt="A demonstrating of creating a Knative service in OpenShift." width="550" height="499" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756737" class="wp-caption-text"&gt;Figure 4: Creating a Knative service in OpenShift.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Binding an event source to a Knative service&lt;/h3&gt; &lt;p&gt;You can now use the OpenShift Developer perspective to create and bind event sources to Knative services. As demonstrated in Figure 5, you just drag the event source connector (arrow icon) out of an existing Knative service and select &lt;strong&gt;Event Source&lt;/strong&gt;. Then, you configure the event source (in this case, a Kafka event source) with the event type that should trigger the application.&lt;/p&gt; &lt;div id="attachment_756717" style="width: 510px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/5-event-source0-1.gif"&gt;&lt;img aria-describedby="caption-attachment-756717" class="wp-image-756717 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/5-event-source0-1.gif" alt="A demonstration of binding a Kafka event source to a Knative service in the OpenShift Developer perspective." width="500" height="454" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756717" class="wp-caption-text"&gt;Figure 5: Binding a Kafka event source to a Knative service in the OpenShift Developer perspective.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Notice that the OpenShift Developer perspective provides a simple slide-out so that you can quickly see all of the resources related to the newly created event source.&lt;/p&gt; &lt;h3&gt;Validating the event-driven application&lt;/h3&gt; &lt;p&gt;The last step in building an event-driven application is to validate that the service is receiving notifications. The demo in Figure 6 shows the Kafka event source using two different Kafka topics to trigger the Knative service.&lt;/p&gt; &lt;div id="attachment_756747" style="width: 560px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/6-events0.gif"&gt;&lt;img aria-describedby="caption-attachment-756747" class="wp-image-756747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/6-events0.gif" alt="A demonstration of coding event notifications from a Kafka event source." width="550" height="502" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-756747" class="wp-caption-text"&gt;Figure 6: Event notifications from a Kafka event source.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Give us your feedback!&lt;/h2&gt; &lt;p&gt;A huge part of the OpenShift developer experience process is receiving feedback and collaborating with our community and customers. We&amp;#8217;d love to hear from you. We hope you will share your thoughts on the &lt;a target="_blank" rel="nofollow" href="https://forms.gle/zDd4tuWvjndCRVMD8"&gt;OpenShift 4.5 Developer Experience feedback page&lt;/a&gt;. You can also join our &lt;a target="_blank" rel="nofollow" href="https://groups.google.com/forum/#!forum/openshift-dev-users"&gt;OpenShift Developer Experience Google Group&lt;/a&gt; to participate in discussions and learn about our Office Hours sessions, where you can collaborate with us and provide feedback about your experience using the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Get started with OpenShift 4.5&lt;/h2&gt; &lt;p&gt;Are you ready to get started with the new OpenShift 4.5 web console? &lt;a target="_blank" rel="nofollow" href="http://www.openshift.com/try"&gt;Try OpenShift 4.5 today&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#38;linkname=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F28%2Fcreating-event-sources-in-the-openshift-4-5-web-console%2F&amp;#038;title=Creating%20event%20sources%20in%20the%20OpenShift%204.5%20web%20console" data-a2a-url="https://developers.redhat.com/blog/2020/07/28/creating-event-sources-in-the-openshift-4-5-web-console/" data-a2a-title="Creating event sources in the OpenShift 4.5 web console"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/28/creating-event-sources-in-the-openshift-4-5-web-console/"&gt;Creating event sources in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WqreFkHs49k" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat OpenShift 4.5 makes it easier than ever to deploy and run event-driven applications that react to real-time information via event notifications. Empowered by OpenShift Serverless, applications come to life through events, scaling up resources as needed (or up to a pre-configured limit), and then scaling back to zero after the resource burst is [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/28/creating-event-sources-in-the-openshift-4-5-web-console/"&gt;Creating event sources in the OpenShift 4.5 web console&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2020/07/28/creating-event-sources-in-the-openshift-4-5-web-console/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">756407</post-id><dc:creator>Brian Tannous</dc:creator><dc:date>2020-07-28T07:00:08Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/28/creating-event-sources-in-the-openshift-4-5-web-console/</feedburner:origLink></entry><entry><title>BarcelonaJUG talk on Tuesday July 28th about Camel 3 in the era of Kubernetes and Serverless</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LAbzjH4FsYk/barcelonajug-talk-on-tuesday-july-28th.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="camelk" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="Presentation" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-barcelonajug_talk_on_tuesday_july_28th_about_camel_3_in_the_era_of_kubernetes_and_serverless</id><updated>2020-07-27T14:39:19Z</updated><published>2020-07-27T14:39:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Just back from PTO and myself and Andrea Cosentino are on the spot tomorrow where we have been invited by Barcelona JUG to give a talk about the Camel 3 and its latest innovation around Kubernetes and Serverless (and Kafka).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-n-qFXEoQCPU/Xx7mxK1FBjI/AAAAAAAACOc/MfwGlrxLrBkhtZPWrHQBjhHgF1sOtHdCgCLcBGAsYHQ/s1600/barca-jug.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="133" data-original-width="200" src="https://1.bp.blogspot.com/-n-qFXEoQCPU/Xx7mxK1FBjI/AAAAAAAACOc/MfwGlrxLrBkhtZPWrHQBjhHgF1sOtHdCgCLcBGAsYHQ/s1600/barca-jug.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;It's a free and online event, in English, tomorrow Tuesday 28th at 19.00 CEST&lt;br /&gt;&lt;a href="https://www.meetup.com/es-ES/BarcelonaJUG/events/271746564/"&gt;https://www.meetup.com/es-ES/BarcelonaJUG/events/271746564/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The session runs for 45 min with Q and A at the end.&lt;br /&gt;&lt;br /&gt;PS: Just updated my platform to use latest Camel K 1.1.0 release, so hope the demo gods are on our side tomorrow.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Ct3TZtJAMn0:vLs3M2RPYeY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Ct3TZtJAMn0:vLs3M2RPYeY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Ct3TZtJAMn0:vLs3M2RPYeY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Ct3TZtJAMn0:vLs3M2RPYeY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Ct3TZtJAMn0:vLs3M2RPYeY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Ct3TZtJAMn0:vLs3M2RPYeY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Ct3TZtJAMn0:vLs3M2RPYeY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/Ct3TZtJAMn0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LAbzjH4FsYk" height="1" width="1" alt=""/&gt;</content><summary>Just back from PTO and myself and Andrea Cosentino are on the spot tomorrow where we have been invited by Barcelona JUG to give a talk about the Camel 3 and its latest innovation around Kubernetes and Serverless (and Kafka). It's a free and online event, in English, tomorrow Tuesday 28th at 19.00 CEST https://www.meetup.com/es-ES/BarcelonaJUG/events/271746564/ The session runs for 45 min with Q an...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-07-27T14:39:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/Ct3TZtJAMn0/barcelonajug-talk-on-tuesday-july-28th.html</feedburner:origLink></entry><entry><title>Infinispan 12.0.0.Dev01</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/22Sly3ElP2c/" /><category term="Development" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_12_0_0_dev01</id><updated>2020-07-27T12:42:34Z</updated><published>2020-07-27T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Dear Infinispan community,&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The first of our development releases of Infinispan 12 is here and it features our upgrade to &lt;a href="https://hibernate.org/search/"&gt;Hibernate Search 6&lt;/a&gt; which finally allows us to upgrade to &lt;a href="https://lucene.apache.org/"&gt;Lucene 8.x&lt;/a&gt;. We’ve had to change a few things in our query implementation to accommodate the latest and greatest and to make the feature simpler to use. As expected, being a development release, there are some rough edges and we’d really love &lt;strong&gt;YOUR&lt;/strong&gt; help in making sure that we get everything right for the final release later this year.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can look at the &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12346555"&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re hard at work on new features, improvements and fixes, so watch this space for more announcements!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us" /&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="https://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.redhat.com/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/22Sly3ElP2c" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan community, The first of our development releases of Infinispan 12 is here and it features our upgrade to Hibernate Search 6 which finally allows us to upgrade to Lucene 8.x. We’ve had to change a few things in our query implementation to accommodate the latest and greatest and to make the feature simpler to use. As expected, being a development release, there are some rough edges a...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2020-07-27T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/07/27/infinispan-12/</feedburner:origLink></entry></feed>
